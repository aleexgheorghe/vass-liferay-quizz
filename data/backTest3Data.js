export const quizzData = {
	questions: [
		{
			id: 1,
			question:
				"While Liferay workspaces can be used in many different development environments, they can only be generated through the use of Liferay Developer Studio.",
			answers: ["True", "False"],
			correctAnswer: ["False"],
			explanation: null,
			reference: null,
		},

		{
			id: 2,
			question:
				"All the below statements are true about Liferay developer studio community edition except:",
			answers: [
				"an open-source publicly available set of Liferay Eclipse Plugins",
				"the same as developer studio DXP but only allows you to install the Liferay DXP bundle automatically",
				"can be installed on top of an existing Eclipse installation",
				"available as an eclipse bundle",
				"allow you to install the Liferay DXP bundle automatically",
			],
			correctAnswer: [
				"allow you to install the Liferay DXP bundle automatically",
			],
			explanation: null,
			reference: null,
		},
		{
			id: 3,
			question:
				"Which of the following is not a valid Liferay workspace folder?",
			answers: ["modules", "bundles", "themes", "configs", "services"],

			correctAnswer: ["configs"],
			explanation:
				"Hypersonic databases should be used for testing purposes only.",
			reference:
				"https://help.liferay.com/hc/en-us/articles/360018155352-Testing-JSON-Web-Services-in-Liferay",
		},

		{
			id: 4,
			question: "Liferay is built on OSGI technology.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference:
				"https://help.liferay.com/hc/en-us/articles/360035467532-OSGi-and-Modularity",
		},

		{
			id: 5,
			question: "Bundle can be stopped while it is in the resolved state.",
			answers: ["True", "False"],
			correctAnswer: ["False"],
			explanation:
				"While the bundle is in resolved state, it could be started or uninstalled.",
			reference: null,
		},

		{
			id: 6,
			question:
				"Which of the following does service builder use to generate code?",
			answers: [
				"serviceBuilder.xml",
				"service.xml",
				"ServiceBuilder.json",
				"serviceImpl.java",
			],
			correctAnswer: ["service.xml"],
			explanation: null,
			reference: null,
		},

		{
			id: 7,
			question:
				"Input validation is typically beneficial to all of the following areas, except",
			answers: ["usability", "reliability", "security", "resource usage"],
			correctAnswer: ["reliability"],
			explanation: null,
			reference: null,
		},

		{
			id: 8,
			question:
				"Portlet class act as a class and a component at the same time.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation:
				"Portlets in Liferay are declared as component using @Component annotation with some parameters defined as properties such as below",
			reference: null,
		},

		{
			id: 9,
			question:
				"Service Builder is a model-driven code generation tool that takes an XML input file and generates persistence code, CURD methods, and service layer automatically.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation:
				"Service Builder is: 1- A model-driven code generation tool 2- Takes an XML input file and generate it automatically 2.1 - Persistence code 2.2 - Caching code 2.3 - CRUD methods and service layer 2.4 - Optionally JSON and SOAP remote services 3- Defines a zone where all the persistence operations are run within the same transaction 4- A development pattern used in all Liferay core services 5- Can be used without persistence to create, for example, web services 5.1 - Service Builder basic concepts: 5.2 - Service and persistence schema definition file service.xml 5.3 - Database modeling and validation hint file portlet-model-hints.xml 5.4 - Local service 5.5 - Remote service 5.6 - Implementation classes 5.7 - Finders 5.8 - Service Wappers 5.9 - Service Context",
			reference: null,
		},

		{
			id: 10,
			question:
				"If you are using Service Builder, in which file would you specify data restrictions (e.g field size, validation, ..).",
			answers: [
				"module-hbm.xml",
				"model-hints.xml",
				"module-spring.xml",
				"portlet-model-hints.xml",
			],
			correctAnswer: ["portlet-model-hints.xml"],
			explanation: null,
			reference: null,
		},

		{
			id: 11,
			question:
				"Remote service meant for accessing the service remotely through web service and accessing the service locally but with permission checks.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation:
				"Letâ€™s check the difference between the local and remote services generated by Liferay service builder tool: Local Service Responsible for calling the persistence layer to retrieve and store data entities Meant for accessing the generated service without permission checks Can be invoked from the same Java Virtual Machine If permission checks are not needed, use the local service for better performance. Remote Service Responsible for accessing the service remotely through web service and locally but with permission checks Usually contains facade methods adding permission checks for the local service methods All user-level access to services should use the remote service.",
			reference: null,
		},

		{
			id: 12,
			question:
				"Service Wrappers are typically used for overriding the core service classes.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation:
				"Service Wrappers are typically used for overriding the core service classes, service builder creates wrapper stub classes in the API module for all the generated services.",
			reference:
				"https://help.liferay.com/hc/en-us/articles/360028833712-Service-Wrapper-Template",
		},

		{
			id: 13,
			question:
				"In order to make MVCRenderCommand you should:",
			answers: [
				"implement BaseMVCRenderCommand interface.",
				"extends MVCRenderCommand class.",
				"implement MVCRenderCommnand interface.",
				"extends BaseMVCRenderCommand class.",
			],
			correctAnswer: ["implement MVCRenderCommnand interface."],
			explanation: null,
			reference:
				"https://help.liferay.com/hc/en-us/articles/360030827512-MVC-Render-Command"
		},

		{
			id: 14,
			question:
				"The following classes provide support for providing custom success and error messages to the client:",
			answers: [
				"SuccessMessages.",
				"SessionMessages.",
				"SessionKeys.",
				"ErrorMessages.",
				"SessionErrors.",
			],
			correctAnswer: ["SessionMessages.", "SessionErrors."],
			explanation: null,
			reference: null,
		},

		{
			id: 15,
			question:
				"Top-level actions are actions for existing resources while Resource action are model actions for non-existing resources",
			answers: ["True", "False"],
			correctAnswer: ["False"],
			explanation:
				"Top-level action: moel actions for non-existing resources (ex: ADD_ENTRY for the model name com.liferay.blogs) Resource action: actions for existing resource (ex: DELETE for model name com.liferay.blogs.model.BlogsEntry)",
			reference: null,
		},

		{
			id: 16,
			question:
				"A role is a collection of permissions that can be assigned to:",
			answers: [
				"Users.",
				"Sites.",
				"Organizations.",
				"User groups.",
			],
			correctAnswer: ["Users.", "Sites.", "Organizations.", "User groups."],
			explanation: null,
			reference: null,
		},

		{
			id: 17,
			question:
				"default.xml is the file where we declare resources and their permissions.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation:
				"N/A",
			reference: "https://help.liferay.com/hc/en-us/articles/360034568151-Defining-Permissions",
		},

		{
			id: 18,
			question:
				"Asset framework is a content-related framework that allows you to aggregate all of the different types of content under one umbrella or one name known as an asset.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation:
				"N/A",
			reference: "https://help.liferay.com/hc/en-us/articles/360028725412-Introduction-to-Asset-Framework",
		},

		{
			id: 19,
			question:
				"Which of the following aspects of your asset are defined in the AssetRenderFactory implementation?",
			answers: [
				"If the asset is selectable.",
				"If the asset is categorizable.",
				"If the asset is displayable.",
				"If the asset is localizable.",
				"If the asset is linkable.",
				"If the asset is active.",
			],
			correctAnswer: [
				"If the asset is selectable.",
				"If the asset is categorizable.",
				"If the asset is linkable.",
				"If the asset is active.",
			],
			explanation:
				"N/A",
			reference: "https://docs.liferay.com/ce/portal/7.2-latest/javadocs/portal-kernel/com/liferay/asset/kernel/model/AssetRendererFactory.html",

		},

		{
			id: 20,
			question:
				"Bundle activators is a class that implements org.osgi.framework.BundleActivator interface and Liferay use bundle activator to control different lifecycle states of a bundle.",
			answers: ["True", "False"],
			correctAnswer: ["False"],
			explanation:
				"Bundel activator is a class that implements org.osgi.framework.BundleActivator interface but Liferay doesn't really deal with these bundle activators.",
			reference: "https://help.liferay.com/hc/en-us/articles/360030826132-Upgrade-Processes-for-Former-Service-Builder-Plugins",
		},

		{
			id: 21,
			question:
				"Below are characteristic of component except:",
			answers: [
				"Any java class inside a bundle declared as a component",
				"An object managed by the component framework of OSGi.",
				"Like a bundle, a component has a lifecycle: it can be started and stopped.",
				"Usually, implement an interface.",
				"It takes care of its lifecycle.",
			],
			correctAnswer: ["It takes care of its lifecycle."],
			explanation:
				"OSGi takes care of the bundle and the component at the same time.",
			reference: null,
		},

		{
			id: 22,
			question:
				"UI taglibs fall back to the portal bundle if a portlet bundle is not found.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference: null,
		},

		{
			id: 23,
			question:
				"A capability is described by two main attributes:",
			answers: [
				"Namespace.",
				"Attributes.",
				"Package.",
				"Version.",
			],
			correctAnswer: ["Namespace.", "Attributes."],
			explanation:
				"Provide Capability â€“ Required Capability is another way that we can share features, What makes up a capability is a namespace and attributes. So the namespace is a unique identifier that we as developers can declare. So the namespace can have whatever sort of descriptive name you want it to be. Thatâ€™s also the same with attributes, you can also declare what sort of attributes you want alongside the capability.",
			reference: null,
		},

		{
			id: 24,
			question:
				"Exporting a bundle explicitly defines which packages to export and make available to other bundles.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation:
				"Export-Package and Import-Package this way, we can share classes, by telling the OSGi container, I have a specific Java package that I want to expose to the OSGi container. So when we say Export-Package weâ€™re quite literally exposing this whole package to the entire OSGi container. Any other bundle can then use Import-Package header to declare or to say I want to import a package thatâ€™s been exposed",
			reference: null,
		},

		{
			id: 25,
			question:
				"Liferay DXP still support the traditional WAR-based portlet development.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference: null,
		},

		{
			id: 26,
			question:
				"Which Blade CLI command connects to Liferay and executes the Gogo command and returns output?",
			answers: [
				"connect",
				"execute.",
				"sh.",
				"gogo.",
				"server.",
			],
			correctAnswer: ["sh."],
			explanation: null,
			reference:
				"https://help.liferay.com/hc/en-us/articles/360018164591-Blade-CLI",
		}

		{
			id: 27,
			question:
				"The MVC event phase cause all portlet in the page to re-render.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation:
				"Processes events triggered in the Action phase. Events are used for inter-portlet communication (IPC). Once the portlet processes all events, the portal calls the Render phase on all portlets on the page.",
			reference: null,
		},

		{
			id: 28,
			question:
				"By convention, top-level actions are referenced by the package name of the respective service and the resource actions by the fully qualified name of the targeted model entity.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference: null,
		},

		{
			id: 29,
			question:
				"What are the three portlet standard modes?",
			answers: [
				"View.",
				"Config.",
				"Edit.",
				"Preview.",
				"Help.",
			],
			correctAnswer: ["View.", "Edit.", "Help."],
			explanation:
				"Portlets also differ from servlets by having distinct modes and window states. Modes distinguish the portletâ€™s current function: View mode: The portletâ€™s standard mode. Use this mode to access the portletâ€™s main functionality. Edit mode: The portletâ€™s configuration mode. Use this mode to configure a custom view or behavior. For example, the Edit mode of a weather portlet might let you choose a location to retrieve weather data from. Help mode: A mode that displays the portletâ€™s help information. Most modern applications use View Mode only.",
			reference: null,
		},

		{
			id: 30,
			question:
				"Which method would you use to obtain a summary of your asset?",
			answers: [
				"The getSummary method of the AssetRenderer instance.",
				"The getSummary method of the AssetRendererFactory instance.",
				"The getDescription method of the AssetSummaryFactory instance.",
				"The getDescription method of the AssetSummary instance.",
			],
			correctAnswer: [
				"The getSummary method of the AssetRenderer instance.",
			],
			explanation:
				"References: https://docs.liferay.com/ce/portal/7.2-latest/javadocs/portal-kernel/com/liferay/asset/kernel/model/AssetRenderer.html https://docs.liferay.com/portal/7.0/javadocs/portal-kernel/com/liferay/asset/kernel/model/AssetRendererFactory.html",
			reference: null,
		},

		{
			id: 31,
			question:
				"Liferay relies on industry-proven standards such as the Portlet standard and JSF.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference:
				"https://help.liferay.com/hc/en-us/articles/360035124151-Introduction-to-Architecture",
		},

		{
			id: 32,
			question:
				"Which of the following are requirements that Liferay architecture satisfies?",
			answers: [
				"Supports using common development technologies.",
				"Leverages development standards.",
				"Facilitates swapping components.",
				"Starts fast and perform well.",
				"Its runtime is easy to configure and inspect.",
			],
			explanation: null,
			reference:
				"https://help.liferay.com/hc/en-us/articles/360035124151-Introduction-to-Architecture",
		},

		{
			id: 33,
			question:
				"Which four entities represent Expandos in the database?",
			answers: [
				"ExpandoTable.",
				"ExpandoRow.",
				"ExpandoColumn.",
				"ExpandoElement",
				"ExpandoValue.",
			],
			correctAnswer: [
				"ExpandoTable.",
				"ExpandoRow.",
				"ExpandoColumn.",
				"ExpandoValue.",
			],
			explanation: null,
			reference: null,
		},

		{
			id: 34,
			question:
				"What Liferay Assets and resources let you add new fields to their edit forms?",
			answers: [
				"Organization.",
				"Page.",
				"Role.",
				"Site.",
			],
			correctAnswer: [
				"Organization.",
				"Page.",
				"Role.",
				"Site.",
			],
			explanation: null,
			reference:
				"https://help.liferay.com/hc/en-us/articles/360028818872-Custom-Fields#adding-custom-fields",
		},

		{
			id: 35,
			question:
				"An OSGi container allows multiple service implementations to co-exist.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference:
				"https://help.liferay.com/hc/en-us/articles/360035467532-OSGi-and-Modularity",
		},

		{
			id: 36,
			question:
				"The reference policy defines whether an injected services reference can be replaced dynamically.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference: null,
		},

		{
			id: 37,
			question:
				"Which of the following are the available reference policy options?",
			answers: [
				"RELUCTANT.",
				"DYNAMIC.",
				"GREEDY.",
				"STATIC.",
			],
			correctAnswer: ["RELUCTANT.", "GREEDY."],
			explanation: null,
			reference: null,
		},

		{
			id: 38,
			question:
				"MVC Action Commands are handler components for a portletâ€™s action phase, typically used to process a form submission and perform a model action.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference: null,
		}

		{
			id: 39,
			question:
				"MVC Render Commands can be used for:",
			answers: [
				"Add, update or delete an item.",
				"Get a list of assets to show in the user interface.",
				"Upload a document.",
				"Fetch an asset entry to show in the user interface.",
			],
			correctAnswer: [
				"Get a list of assets to show in the user interface.",
				"Fetch an asset entry to show in the user interface.",
			],
			explanation: null,
			reference: null,
		},

		{
			id: 40,
			question:
				"Which of the following are steps for overriding struts action?",
			answers: [
				"Find the action path you are overriding (struts-config.xml).",
				"Create a Liferay Module Project.",
				"Create a new Struts Action component.",
				"Override and implement methods as needed.",
				"All of the above.",
			],
			correctAnswer: ["All of the above."],
			explanation: null,
			reference: null,
		}

		{
			id: 41,
			question:
				"The @Indexable Annotation is a Liferay-provided, method-level annotation to be used with Service Builder that automatically updates the index on entity modification events.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference: null,
		},

		{
			id: 42,
			question:
				"Which of the following are steps for enabling workflows for custom entities?",
			answers: [
				"Add workflow instance creation and deletion handling to the service layer.",
				"Assign workflows to the Portal layer.",
				"Create assignment classes in the service layer.",
				"Ensure that the model entity has status fields",
				"Make getter methods on the service layer status-aware.",
			],
			correctAnswer: [
				"Add workflow instance creation and deletion handling to the service layer.",
				"Ensure that the model entity has status fields",
				"Make getter methods on the service layer status-aware.",
			],
			explanation: null,
			reference: null,
		},

		{
			id: 43,
			question:
				"Which of the following are Steps for creating a Model Listener?",
			answers: [
				"Create a new Liferay module using the API template.",
				"Create a model listener component using Liferay Component Class wizard.",
				"Create a component extending the ActiveModelListener class.",
				"Implement the event handler method(s).",
				"Create a new Liferay module using ext template.",
			],
			correctAnswer: [
				"Create a new Liferay module using the API template.",
				"Create a model listener component using Liferay Component Class wizard.",
				"Implement the event handler method(s).",
			],
			explanation: null,
			reference: null,
		},

		{
			id: 44,
			question:
				"The destination is a named endpoint for sending a message to and receives messages from, listeners registered to it to receive messages.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference: null,
		},

		{
			id: 45,
			question:
				"What are the destination types in Liferay message bus system?",
			answers: [
				"Parallel.",
				"Serial.",
				"Synchronous.",
				"Asynchronous.",
			],
			correctAnswer: [
				"Parallel.",
				"Serial.",
				"Synchronous.",
			],
			explanation: null,
			reference: null,
		},

		{
			id: 46,
			question:
				"Code using the Liferay platform search always communicates through the portal search API.",
			answers: ["True", "False"],
			correctAnswer: ["True"],
			explanation: null,
			reference: null,
		},

		{
			id: 47,
			question:
				"The default framework used by Liferay DXP for indexing is:",
			answers: [
				"Solar Search.",
				"Lucene Indexing.",
				"Elastic search.",
				"Binary search.",
			],

			correctAnswer: ["Elastic search."],
			explanation: null,
			reference: null,
		},

		{
			id: 48,
			question:
				"What is meant by analysis phase in Liferay search?",
			answers: [
				"The process of transforming a portal asset to a search engine index document",
				"Can be configured for each field individually in the mapping definition",
				"A field-level process of transforming input data to search engine data",
				"Run both the index time and search time",
			],
			correctAnswer: [
				"Can be configured for each field individually in the mapping definition",
				"A field-level process of transforming input data to search engine data",
				"Run both the index time and search time",
			],
			explanation: null,
			reference: null,
		},

		{
			id: 49,
			question:
				"What can you do using Hits indexer postprocessors?",
			answers: [
				"Modify index documents before theyâ€™re sent to the search engine",
				"Modify queries before they are executed",
				"Modify result summaries when theyâ€™re returned, end-user",
				"All of the above",
			],
			correctAnswer: ["All of the above"],
			explanation: null,
			reference: null,
		},

		{
			id: 50,
			question:
				"bnd.bnd provides the dependencies while build.gradle wires the dependencies to bundle.",
			answers: ["True", "False"],
			correctAnswer: ["False"],
			explanation:
				"build.gradle provides the dependencies while bnd.bnd wires the dependencies to bundle.",
			reference: null,
		},
	],
};
